# ================================================
# JARVIS Chat - Staging Environment Template
# ================================================
# Copy this file to .env.staging for staging deployments
# This environment should mirror production as closely as possible

# ================================================
# APPLICATION CONFIGURATION
# ================================================

# Application Environment (REQUIRED)
VITE_APP_ENV=staging

# Application Version (REQUIRED)
# Use semantic versioning or build numbers
VITE_APP_VERSION=staging

# Application Domain (REQUIRED)
# Staging domain for testing
VITE_APP_DOMAIN=staging-jarvis.madpanda3d.com

# CDN URL (OPTIONAL)
# Staging CDN for testing static asset delivery
# VITE_CDN_URL=https://staging-cdn.madpanda3d.com

# ================================================
# DATABASE & AUTHENTICATION (SUPABASE)
# ================================================

# Supabase Project URL (REQUIRED)
# Use separate Supabase project for staging
VITE_SUPABASE_URL=https://your-staging-project.supabase.co

# Supabase Anonymous Key (REQUIRED)
# Staging project anonymous key
VITE_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.your-staging-anon-key

# Supabase Service Role Key (OPTIONAL)
# WARNING: Server-side only - never expose to clients!
# SUPABASE_SERVICE_ROLE_KEY=your-staging-service-role-key

# ================================================
# EXTERNAL INTEGRATIONS
# ================================================

# n8n Webhook URL (REQUIRED)
# Staging n8n instance for testing workflows
VITE_N8N_WEBHOOK_URL=https://staging-n8n.madpanda3d.com/webhook/jarvis

# n8n Webhook Secret (REQUIRED)
# Staging webhook secret - different from production
N8N_WEBHOOK_SECRET=your-staging-webhook-secret

# n8n API Key (OPTIONAL)
# For workflow management in staging
# N8N_API_KEY=your-staging-n8n-api-key

# ================================================
# MONITORING & LOGGING
# ================================================

# Sentry Error Tracking DSN (RECOMMENDED)
# Separate Sentry project or environment for staging
VITE_SENTRY_DSN=https://your-staging-dsn@sentry.io/staging-project-id

# DataDog API Key (OPTIONAL)
# Staging monitoring with separate tags
# DATADOG_API_KEY=your-staging-datadog-api-key

# Log Level (REQUIRED)
# More verbose logging for debugging
LOG_LEVEL=info

# Enable Analytics (RECOMMENDED)
# Test analytics in staging environment
ENABLE_ANALYTICS=true

# ================================================
# PERFORMANCE & SECURITY
# ================================================

# Enable Caching (RECOMMENDED)
# Test caching behavior in staging
ENABLE_CACHING=true

# Cache Time-to-Live (OPTIONAL)
# Shorter TTL for faster testing iterations
CACHE_TTL=1800

# Enable Compression (RECOMMENDED)
# Test compression in staging
COMPRESSION_ENABLED=true

# Rate Limiting Window (OPTIONAL)
# More generous limits for testing
RATE_LIMIT_WINDOW=60

# Max Requests per Window (OPTIONAL)
# Higher limits for load testing
RATE_LIMIT_MAX_REQUESTS=200

# Content Security Policy (RECOMMENDED)
# Test CSP policies before production
CSP_ENABLED=true

# ================================================
# FEATURE FLAGS & DEBUGGING
# ================================================

# Enable Debug Tools (OPTIONAL)
# Usually disabled in staging
ENABLE_DEBUG_TOOLS=false

# Enable Experimental Features (RECOMMENDED)
# Test new features in staging
ENABLE_EXPERIMENTAL_FEATURES=true

# Mock n8n Responses (OPTIONAL)
# Usually false - test real integration
MOCK_N8N_RESPONSES=false

# Bypass Authentication (OPTIONAL)
# Should be false in staging
BYPASS_AUTH=false

# ================================================
# WEBHOOK CONFIGURATION
# ================================================

# Webhook Timeout (OPTIONAL)
# Standard timeout for staging
WEBHOOK_TIMEOUT=15000

# Webhook Retry Attempts (OPTIONAL)
# Standard retry behavior
WEBHOOK_RETRY_ATTEMPTS=3

# Circuit Breaker Threshold (OPTIONAL)
# Standard circuit breaker settings
WEBHOOK_CIRCUIT_BREAKER_THRESHOLD=5

# Enable Webhook Monitoring (RECOMMENDED)
# Monitor webhook performance in staging
WEBHOOK_MONITORING_ENABLED=true

# ================================================
# STAGING-SPECIFIC SETTINGS
# ================================================

# Auto-deployment from develop branch (CI/CD)
# Used by GitHub Actions or deployment scripts
AUTO_DEPLOY_BRANCH=develop

# Staging Environment Tags
# For monitoring and log filtering
ENVIRONMENT_TAGS=staging,testing,pre-production

# Data Seeding (OPTIONAL)
# Enable test data population
ENABLE_TEST_DATA_SEEDING=true

# Performance Testing (OPTIONAL)
# Enable performance monitoring
ENABLE_PERFORMANCE_TESTING=true

# ================================================
# SECURITY CONFIGURATION
# ================================================

# CORS Origins (REQUIRED)
# Allowed origins for staging
CORS_ORIGINS=https://staging-jarvis.madpanda3d.com,https://staging-admin.madpanda3d.com

# JWT Configuration
# JWT settings for staging
# JWT_SECRET=your-staging-jwt-secret
# JWT_EXPIRY=24h

# Session Configuration
# Session timeout for staging
SESSION_TIMEOUT=3600

# ================================================
# BACKUP & RECOVERY
# ================================================

# Database Backup Configuration
# Staging backup settings
BACKUP_ENABLED=true
BACKUP_FREQUENCY=daily
BACKUP_RETENTION_DAYS=7

# Disaster Recovery
# DR settings for staging
DR_ENABLED=false

# ================================================
# DEPLOYMENT CONFIGURATION
# ================================================

# Build Configuration
# Staging build settings
BUILD_TARGET=staging
BUILD_OPTIMIZATION=true
SOURCE_MAPS=true

# Container Configuration
# Docker settings for staging
CONTAINER_PORT=80
CONTAINER_MEMORY_LIMIT=1GB
CONTAINER_CPU_LIMIT=1

# Health Check Configuration
# Health check settings
HEALTH_CHECK_PATH=/health
HEALTH_CHECK_INTERVAL=30s
HEALTH_CHECK_TIMEOUT=10s
HEALTH_CHECK_RETRIES=3

# ================================================
# NOTIFICATION CONFIGURATION
# ================================================

# Slack Notifications (OPTIONAL)
# For deployment and error notifications
# SLACK_WEBHOOK_URL=https://hooks.slack.com/services/your/slack/webhook
# SLACK_CHANNEL=#staging-alerts

# Email Notifications (OPTIONAL)
# For critical alerts
# SMTP_HOST=smtp.yourdomain.com
# SMTP_PORT=587
# SMTP_USERNAME=alerts@yourdomain.com
# SMTP_PASSWORD=your-smtp-password

# ================================================
# STAGING VALIDATION CHECKLIST
# ================================================
# Before deploying to staging:
# □ All required variables are set
# □ Separate Supabase project configured
# □ Staging n8n instance is running
# □ Error tracking is configured
# □ Monitoring is enabled
# □ Security settings are configured
# □ Performance testing is enabled
# □ Backup and recovery is tested

# ================================================
# SECURITY NOTES
# ================================================
# - Use separate secrets from production
# - Implement proper access controls
# - Monitor for unauthorized access
# - Test security policies before production
# - Regular security audits
# - Rotate secrets regularly
# - Monitor for configuration drift

# ================================================
# TROUBLESHOOTING
# ================================================
# Common staging issues:
# 1. Database connection: Check Supabase staging project
# 2. Webhook failures: Verify n8n staging instance
# 3. Authentication issues: Check staging auth settings
# 4. Performance issues: Review monitoring dashboards
# 5. Deployment failures: Check CI/CD logs
# 6. SSL/TLS issues: Verify certificate configuration