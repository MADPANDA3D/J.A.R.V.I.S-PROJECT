{
  "name": "AI MARKETING TEAM",
  "nodes": [
    {
      "parameters": {
        "model": "openai/gpt-4.1",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        624,
        512
      ],
      "id": "68433a69-5449-4e5a-ac17-f8755d89aa39",
      "name": "GPT 4.1"
    },
    {
      "parameters": {
        "name": "createImage",
        "description": "Call this tool to create an image. ",
        "workflowId": {
          "__rl": true,
          "value": "lsZTPeThp35cB3Hs",
          "mode": "list",
          "cachedResultName": "Create Image"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "chatID": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
            "imagePrompt": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('imagePrompt', `The image requested by the user`, 'string') }}",
            "imageTitle": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('imageTitle', `The title of the image. Should be no more than 4 words.`, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "imageTitle",
              "displayName": "imageTitle",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "imagePrompt",
              "displayName": "imagePrompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "chatID",
              "displayName": "chatID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        1584,
        512
      ],
      "id": "eb9788fd-9f19-4296-b016-3376b807a0d3",
      "name": "Create Image"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1968,
        160
      ],
      "id": "8e025b9c-0cbc-4eec-8eca-4dd7e27f95cf",
      "name": "Telegram",
      "webhookId": "fbdb3bd7-490b-4d3e-961e-e2d398294649"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        912,
        512
      ],
      "id": "b1603dca-715b-4211-a51d-c052da4e0fa9",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "name": "editImage",
        "description": "Call this tool to edit an image.",
        "workflowId": {
          "__rl": true,
          "value": "nMBpMe21l4gDEjOI",
          "mode": "list",
          "cachedResultName": "Edit Image"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "image": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('image', `The title of the image the user wants to edit`, 'string') }}",
            "chatID": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
            "request": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('request', `The edit the user wants to make to the image`, 'string') }}",
            "pictureID": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('pictureID', `The ID of the image to edit`, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "image",
              "displayName": "image",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "request",
              "displayName": "request",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "chatID",
              "displayName": "chatID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "pictureID",
              "displayName": "pictureID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        1744,
        512
      ],
      "id": "88bb74ad-5b48-4408-a46f-5437dfd1a5a5",
      "name": "Edit Image"
    },
    {
      "parameters": {
        "name": "searchImages",
        "description": "Call this tool to search the image database.",
        "workflowId": {
          "__rl": true,
          "value": "zDYAKGCIEChJa1JH",
          "mode": "list",
          "cachedResultName": "Search Images"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "intent": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('intent', `The intent of the user. This can either be \"Get\" or \"Edit\"`, 'string') }}",
            "image": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('image', `The image title`, 'string') }}",
            "chatID": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "intent",
              "displayName": "intent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "image",
              "displayName": "image",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "chatID",
              "displayName": "chatID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        1984,
        512
      ],
      "id": "a670dda1-dcf5-46ef-af71-4c79fded1e22",
      "name": "Search Images"
    },
    {
      "parameters": {
        "name": "blogPost",
        "description": "Call this tool to create a blog post using a topic and a target audience.",
        "workflowId": {
          "__rl": true,
          "value": "sS2JMp5z7YiqtJpa",
          "mode": "list",
          "cachedResultName": "Blog Post"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "blogTopic": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('blogTopic', `The topic of the blog.`, 'string') }}",
            "targetAudience": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('targetAudience', `The target audience for the blog.`, 'string') }}",
            "chatID": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "blogTopic",
              "displayName": "blogTopic",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "targetAudience",
              "displayName": "targetAudience",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "chatID",
              "displayName": "chatID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        1408,
        512
      ],
      "id": "88808c61-3f33-48d7-83ac-579b0f2cdf2e",
      "name": "Blog Post"
    },
    {
      "parameters": {
        "content": "# Marketing Team",
        "height": 400,
        "width": 460
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1408,
        0
      ],
      "id": "ce4b19c5-75d2-4bc4-9b07-c4ef7b6532c8",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "name": "linkedinPost",
        "description": "Call this tool to create a LinkedIn post using a topic and a target audience.",
        "workflowId": {
          "__rl": true,
          "value": "RgUBWsswXoQsX2tI",
          "mode": "list",
          "cachedResultName": "LinkedIn Post"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "postTopic": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('postTopic', `The topic of the LinkedIn post`, 'string') }}",
            "targetAudience": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('targetAudience', `The target audience of the LinkedIn post`, 'string') }}",
            "chatID": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "postTopic",
              "displayName": "postTopic",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "targetAudience",
              "displayName": "targetAudience",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "chatID",
              "displayName": "chatID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        1248,
        512
      ],
      "id": "16d6951d-0081-4a6a-8ffd-47607490bf52",
      "name": "LinkedIn Post"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fe7ecc99-e1e8-4a5e-bdd6-6fce9757b234",
              "name": "text",
              "value": "={{ $json.message.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "48cb20f7-91d8-4917-96c5-18cd157981e3",
      "name": "Set 'Text'",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1856,
        896
      ]
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}"
      },
      "id": "1f0b4973-42a6-4954-ab3e-b20d65731748",
      "name": "Download Voice File",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1776,
        736
      ],
      "webhookId": "c0b376b1-7b63-41b6-8063-0b3096b8333d"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "id": "21990130-f1c8-472d-9244-5858d894f6f1",
      "name": "Transcribe Audio",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        1936,
        736
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.voice.file_id }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Voice"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8c844924-b2ed-48b0-935c-c66a8fd0c778",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Text"
            }
          ]
        },
        "options": {}
      },
      "id": "f7c53b13-f3ad-4897-90d4-245259b3ed42",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1520,
        816
      ]
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "id": "88bb4408-f9a4-46c4-8df7-b54d077bb2e7",
      "name": "Telegram Trigger",
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [
        1376,
        816
      ],
      "webhookId": "99eab1a0-569d-4f0f-a49e-578a02abfe63"
    },
    {
      "parameters": {
        "content": "# Trigger\n",
        "height": 400,
        "width": 360,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1312,
        704
      ],
      "id": "c999cc90-5ca9-43f3-949f-30b2c47d2dd1",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "# Content Creation",
        "height": 220,
        "width": 480,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1040,
        432
      ],
      "id": "16e95f86-7870-44ef-aeb7-39aeeca6af1f",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "# Image Creation",
        "height": 220,
        "width": 320,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1552,
        432
      ],
      "id": "dee681f1-7d97-4a89-a35c-ea5d8d42da0c",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "# Image Database",
        "height": 220,
        "width": 300,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1888,
        432
      ],
      "id": "2ae2d021-11c4-4177-b495-35e25cdea75b",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "# Response\n\n",
        "height": 400,
        "width": 300,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1888,
        0
      ],
      "id": "1da52288-ce3a-4428-bf16-07731a2b791f",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "# Brain\n\n",
        "height": 220,
        "width": 440,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        592,
        432
      ],
      "id": "b7601fc3-af9b-4223-9f41-9d7c1433a788",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "# Voice or Text",
        "height": 400,
        "width": 420,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1680,
        704
      ],
      "id": "4c514221-ef3c-424d-94ce-fe313f151eb6",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "name": "video",
        "description": "Call this tool to create a video.",
        "workflowId": {
          "__rl": true,
          "value": "7HwL0nnjhjdXJ3FY",
          "mode": "list",
          "cachedResultName": "Faceless Video"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "videoTopic": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('videoTopic', `The topic of the video`, 'string') }}",
            "chatID": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "videoTopic",
              "displayName": "videoTopic",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "chatID",
              "displayName": "chatID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        1088,
        512
      ],
      "id": "7e3f7ffe-3f06-4d2c-b4be-10ffb8711623",
      "name": "Video"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.text }}",
        "options": {
          "systemMessage": "=# Overview\nYou are a marketing team AI agent. Your job is to help the user create and edit images based on the request, or create content.\n\n## Tools\ncreateImage - Use this to create an image. Send the requested image prompt to this tool.\neditImage - Use this to edit an image. The user might also say \"make\" rather than \"edit\".\nImage Database - Use this to search the image database. \nblogPost - Use this to create a blog post.\nlinkedinPost - Use this to create a LinkedIn post.\nvideo - Use this tool to create a video.\nThink - Use this if you need help making a decision.\n\n## Instructions\n- If the user asks to 'edit that image' or 'make that...', this indicates they want to edit the last image in the database, the most recent one.\n- If the user requests a blog post or LinkedIn post, use the \"blogPost\" or \"linkedinPost\" tool and output: \"Here's that post you requested. Hope you enjoy it.\"\n\n## Output\n- Make sure to return the image link as a clickable link\n\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        1504,
        160
      ],
      "id": "a4deae8b-7fb4-43b0-b107-b0e5079ee201",
      "name": "Marketing Team Agent"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1,
      "position": [
        768,
        512
      ],
      "id": "a099c25d-4274-47d2-b009-38e828b69873",
      "name": "Think"
    },
    {
      "parameters": {
        "content": "# 📋 Setup Guide  \n**Author: [Nate Herk](https://www.youtube.com/@nateherk/videos)**\n---\n### ✅ First Steps\n1. **Import the following workflows** into your n8n environment:\n   - Video\n   - LinkedIn Post\n   - Blog Post\n   - Create Image\n   - Edit Image\n   - Search Images\n\n2. **Link all workflows** together appropriately.\n   - Make sure that the tools the Marketing Team Agent uses are correctly linked to these workflows.\n   - Rename workflows as needed to fit your naming system.\n---\n\n### 🔗 Credentials to Connect\n- **[Telegram Credential](https://telegram.org/)** (for outbound/inbound communication)\n- **[OpenRouter](https://openrouter.ai/) Credential** (for AI requests)\n- **[Tavily](https://tavily.com/) Credential** (for research inside LinkedIn Post and Blog Post workflows)\n---\n\n### 🔑 API Keys to Configure\nInside the **Video Workflow**:\n- **[PiAPI](https://piapi.ai/) API Key** (for video generation)\n- **[Runway](https://runwayml.com/) API Key** (for video processing)\n- **[ElevenLabs](https://elevenlabs.io/) API Key** (for voice generation)\n\nInside the **LinkedIn Post** and **Blog Post Workflows**:\n- **[Tavily](https://tavily.com/) API Key** (for research assistance)\n---\n\n### 📄 Templates to Download and Connect\n- **[Creatomate](https://creatomate.com/) Image Template**  \n  → Download from the Free Skool Community\n\n- **[Google Sheets Log Template](https://docs.google.com/spreadsheets/d/1wQxM9cAwewCigPH22KDidMu_i9j_dx4MHEa5rmJiw5I/edit?usp=sharing)**  \n  → Connect it to your n8n Google Sheets node to track content outputs.\n---\n\nMake sure all credentials, APIs, and templates are properly set before running the full system!\n",
        "height": 1000,
        "width": 560
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "f1a032b8-83f3-43b3-a5cd-5b6138b97046",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        1264,
        160
      ],
      "id": "cb964645-c519-4ee0-8053-93e1e692e4fb",
      "name": "When Executed by Another Workflow"
    }
  ],
  "pinData": {},
  "connections": {
    "GPT 4.1": {
      "ai_languageModel": [
        [
          {
            "node": "Marketing Team Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Create Image": {
      "ai_tool": [
        [
          {
            "node": "Marketing Team Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "Marketing Team Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Edit Image": {
      "ai_tool": [
        [
          {
            "node": "Marketing Team Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Search Images": {
      "ai_tool": [
        [
          {
            "node": "Marketing Team Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Blog Post": {
      "ai_tool": [
        [
          {
            "node": "Marketing Team Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "LinkedIn Post": {
      "ai_tool": [
        [
          {
            "node": "Marketing Team Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Download Voice File": {
      "main": [
        [
          {
            "node": "Transcribe Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Download Voice File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set 'Text'",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe Audio": {
      "main": [
        []
      ]
    },
    "Set 'Text'": {
      "main": [
        []
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Video": {
      "ai_tool": [
        [
          {
            "node": "Marketing Team Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Marketing Team Agent": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Think": {
      "ai_tool": [
        [
          {
            "node": "Marketing Team Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Marketing Team Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "a4d709e8-02bb-4567-8375-f7168a3386cf",
  "meta": {
    "instanceId": "68a46beddbb9d9f12628b915d20fde7f29150dcbc35430946a93fb6a6da688c2"
  },
  "id": "xfPsLBo3VFJ8fd7a",
  "tags": []
}