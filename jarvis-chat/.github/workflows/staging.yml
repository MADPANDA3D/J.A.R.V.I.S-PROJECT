name: Deploy to Staging

on:
  push:
    branches: [develop]
  workflow_dispatch: # Allow manual trigger

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy-staging:
    name: Deploy to Staging Environment
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://staging-jarvis.madpanda3d.com

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,prefix=develop-

      - name: Build and push staging image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      - name: Deploy to staging server
        run: |
          echo "Deploying to staging environment"
          echo "Image: ${{ steps.meta.outputs.tags }}"
          # Execute staging deployment script
          ./scripts/deploy-staging.sh

      - name: Run staging smoke tests
        run: |
          # Wait for deployment to be ready
          sleep 30
          ./scripts/smoke-tests.sh staging

      - name: Notify deployment status
        if: always()
        run: |
          if [ "${{ job.status }}" = "success" ]; then
            echo "‚úÖ Staging deployment successful!"
            echo "üåê Available at: https://staging-jarvis.madpanda3d.com"
          else
            echo "‚ùå Staging deployment failed!"
            # Trigger rollback if needed
            ./scripts/rollback.sh staging
          fi
