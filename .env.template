# ================================================
# JARVIS Chat - Development Environment Template
# ================================================
# Copy this file to .env.local and configure your development environment
# WARNING: Never commit .env.local to version control!

# ================================================
# APPLICATION CONFIGURATION
# ================================================

# Application Environment (REQUIRED)
# Values: development, staging, production
VITE_APP_ENV=development

# Application Version (OPTIONAL)
# Used for debugging and feature tracking
VITE_APP_VERSION=dev

# Application Domain (OPTIONAL)
# The domain where your app is hosted
VITE_APP_DOMAIN=localhost:5173

# CDN URL (OPTIONAL - Production only)
# URL for serving static assets from CDN
# VITE_CDN_URL=https://cdn.yourdomain.com

# ================================================
# DATABASE & AUTHENTICATION (SUPABASE)
# ================================================

# Supabase Project URL (REQUIRED)
# Get this from your Supabase project dashboard
# Example: https://your-project-id.supabase.co
VITE_SUPABASE_URL=https://your-project.supabase.co

# Supabase Anonymous Key (REQUIRED)
# This is safe to expose to clients - it's designed for frontend use
# Get this from your Supabase project API settings
VITE_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.your-anon-key-here

# Supabase Service Role Key (OPTIONAL - Server-side only)
# WARNING: This key has full database access - NEVER expose to clients!
# Only use in secure server environments
# SUPABASE_SERVICE_ROLE_KEY=your-service-role-key-here

# ================================================
# EXTERNAL INTEGRATIONS
# ================================================

# n8n Webhook URL (REQUIRED)
# Endpoint for AI processing via n8n workflows
# Development: Use local n8n instance or ngrok tunnel
VITE_N8N_WEBHOOK_URL=http://localhost:5678/webhook/jarvis

# n8n Webhook Secret (REQUIRED)
# Secret for authenticating webhook requests
# WARNING: This is a SECRET - do not expose to clients!
N8N_WEBHOOK_SECRET=your-development-webhook-secret

# n8n API Key (OPTIONAL)
# For advanced n8n operations and workflow management
# N8N_API_KEY=your-n8n-api-key

# ================================================
# MONITORING & LOGGING
# ================================================

# Sentry Error Tracking DSN (OPTIONAL)
# For error monitoring and debugging
# Get this from your Sentry project settings
# VITE_SENTRY_DSN=https://your-dsn@sentry.io/project-id

# DataDog API Key (OPTIONAL)
# For advanced monitoring and analytics
# WARNING: This is a SECRET - do not expose to clients!
# DATADOG_API_KEY=your-datadog-api-key

# Log Level (OPTIONAL)
# Controls console logging verbosity
# Values: debug, info, warn, error
LOG_LEVEL=debug

# Enable Analytics (OPTIONAL)
# Enable user analytics and usage tracking
ENABLE_ANALYTICS=false

# ================================================
# PERFORMANCE & SECURITY
# ================================================

# Enable Caching (OPTIONAL)
# Improves performance by caching API responses
ENABLE_CACHING=false

# Cache Time-to-Live (OPTIONAL)
# How long to cache responses (in seconds)
CACHE_TTL=1800

# Enable Compression (OPTIONAL)
# Compress responses to reduce bandwidth
COMPRESSION_ENABLED=false

# Rate Limiting Window (OPTIONAL)
# Time window for rate limiting (in seconds)
RATE_LIMIT_WINDOW=60

# Max Requests per Window (OPTIONAL)
# Maximum requests allowed per rate limit window
RATE_LIMIT_MAX_REQUESTS=1000

# Content Security Policy (OPTIONAL)
# Enable CSP headers for security
CSP_ENABLED=false

# ================================================
# FEATURE FLAGS & DEBUGGING
# ================================================

# Enable Debug Tools (OPTIONAL)
# Shows debug information and tools in development
ENABLE_DEBUG_TOOLS=true

# Enable Experimental Features (OPTIONAL)
# Enables features still in development
ENABLE_EXPERIMENTAL_FEATURES=true

# Mock n8n Responses (OPTIONAL)
# Use mock responses instead of real n8n integration
# Useful for development when n8n is not available
MOCK_N8N_RESPONSES=false

# Bypass Authentication (OPTIONAL)
# WARNING: Only use in development! Bypasses all auth checks
BYPASS_AUTH=false

# ================================================
# WEBPACK/VITE CONFIGURATION
# ================================================

# Webhook Timeout (OPTIONAL)
# Timeout for webhook requests in milliseconds
WEBHOOK_TIMEOUT=15000

# Webhook Retry Attempts (OPTIONAL)
# Number of times to retry failed webhook requests
WEBHOOK_RETRY_ATTEMPTS=3

# Circuit Breaker Threshold (OPTIONAL)
# Number of failures before circuit breaker opens
WEBHOOK_CIRCUIT_BREAKER_THRESHOLD=5

# Enable Webhook Monitoring (OPTIONAL)
# Enable detailed webhook performance monitoring
WEBHOOK_MONITORING_ENABLED=true

# ================================================
# DEVELOPMENT-SPECIFIC SETTINGS
# ================================================

# Hot Module Replacement (OPTIONAL)
# Enable/disable HMR in development
# VITE_HMR=true

# Development Server Port (OPTIONAL)
# Port for the development server
# VITE_DEV_PORT=5173

# Development Server Host (OPTIONAL)
# Host for the development server
# VITE_DEV_HOST=localhost

# ================================================
# QUICK SETUP GUIDE
# ================================================
# 1. Copy this file to .env.local
# 2. Replace 'your-project' with your actual Supabase project ID
# 3. Replace 'your-anon-key-here' with your actual Supabase anon key
# 4. Set up your n8n webhook URL (local or remote)
# 5. Configure your webhook secret
# 6. Adjust other settings as needed
# 7. Run: npm run validate-env
# 8. Run: npm run dev

# ================================================
# SECURITY REMINDERS
# ================================================
# - Add .env.local to .gitignore (already done)
# - Never commit actual secrets to version control
# - Use different secrets for each environment
# - Rotate secrets regularly
# - Monitor for secret exposure in logs
# - Use HTTPS in staging and production
# - Enable proper CORS settings
# - Implement proper error handling

# ================================================
# TROUBLESHOOTING
# ================================================
# If you encounter issues:
# 1. Check console for validation errors
# 2. Verify all REQUIRED variables are set
# 3. Ensure URLs are properly formatted
# 4. Check Supabase project is active
# 5. Verify n8n webhook is accessible
# 6. Review the environment setup guide: docs/environment-setup.md